#!/usr/bin/env bash

source /etc/intelpwm.conf 1>/dev/null 2>&1 || >&2 echo "WARN:  /etc/intelpwm.conf does not exit"

PCH_RAWCLK_FREQ_REG=${PCH_RAWCLK_FREQ_REG:-PCH_RAWCLK_FREQ}
BLC_PWM_PCH_CTL2_REG=${BLC_PWM_PCH_CTL2_REG:-BLC_PWM_PCH_CTL2}

if [ -z "$FREQ" ]; then 
  >&2 echo "ERROR: FREQ is not defined. Specify in /etc/intelpwm.conf or in environment"
  exit 1
fi

function reg_check() {
  # If the register is a mnemonic name and not an offset, make sure that it is
  # known to intel_reg utility. Unknown mnemonic likely means, that we are on a
  # different generation of hardware that may have different registers layout
  printf "%d" "$1" 1>/dev/null 2>&1  || \
    intel_reg list | grep "$1" 1>/dev/null 2>&1 || \
      (>&2 echo "ERROR: Register $1 is not defined for this hardware" && false)
}

function reg_read() {
  # this assumes fixed position of the value in intel_reg output
  # so far this has been the case though
  intel_reg  read "$1" | cut -c51-60
}

reg_check "${PCH_RAWCLK_FREQ_REG}" || exit 1
reg_check "${BLC_PWM_PCH_CTL2_REG}" || exit 1

PCH_FREQ="$(reg_read ${PCH_RAWCLK_FREQ_REG})"
BLC_CTL2="$(reg_read ${BLC_PWM_PCH_CTL2_REG})"
CYCLE="${BLC_CTL2:6:4}"
HEX=$(printf "0x%08x" $((1000000*PCH_FREQ/128/FREQ)))
PERIOD="${HEX:6:9}"

>&2 echo "Writing 0x${PERIOD}${CYCLE} to register ${BLC_PWM_PCH_CTL2_REG}"
intel_reg write "${BLC_PWM_PCH_CTL2_REG}" "0x${PERIOD}${CYCLE}"

